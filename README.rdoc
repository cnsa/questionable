= Questionable

Questionable is a Rails engine that make it easier to create and answer surveys through a web interface.

You can create your questions and options through the included 
{ActiveAdmin}[https://github.com/gregbell/active_admin] interface.
If ActiveAdmin is installed in your application, Questionable will automatically add admin pages.

Then you can use the included partial template and controller for displaying 
the questions and recording your users' answers.

== Installation

Add Questionable to your Gemfile:

  gem 'questionable'

or for the latest:

  gem 'questionable', :git => 'git://github.com/bespokepost/questionable.git'

Then run:

  bundle install
  rake questionable:install:migrations
  rake db:migrate

Add Questionable to your config/routes.rb:

  mount Questionable::Engine, :at => 'questions'

Optionally add the following to app/assets/stylesheet/application.css:

 *= require questionable

== Usage

=== Create some questions

Create one or more Questions. Supported input_types include select, multiselect,
radio, checkboxes, date, text, and string.

  # input_type may be select, multiselect, radio, checkboxes, date, text, or string.
  q = Questionable::Question.create(title: 'What is your favorite color?', input_type: 'select', note: 'This is important' )
  # comment (text comment for question groups)
  q = Questionable::Question.create(title: 'What is your favorite color?', note: 'This is important', input_type: 'text', category: 'comment' )

Add Options, unless input_type is 'string' or 'text'

  q.options.create(title: 'Red',   position: 1)
  q.options.create(title: 'Green', position: 2)
  q.options.create(title: 'Blue',  position: 3)

Create one or more Question groups.

  qg = Questionable::QuestionGroup.create(title: 'What is your favorite question group?', note: 'This is important')

Questions must be assigned a 'subject' before they are used. 
They subject can be either an object, via a polymorphic association, 
or something general like "preferences", which we can pass here as a symbol or string.

e.g.

  @product = Product.find(123)
  Questionable::Assignment.create(question_id: q.id, subject: @product)

or

  Questionable::Assignment.create(question_id: q.id, subject_type: 'preferences')

or

  Questionable::Assignment.create(question_id: q.id, question_group_id: qg.id, subject: @product)

or

  Questionable::Assignment.create(question_id: q.id, question_group_id: qg.id, subject_type: 'preferences')

===  In your controller

Here's we fetch question-assignments for a particular symbol:

  @assignments = Questionable::Assignment.with_subject(:preferences)

and here, for a product object:

  @product = Product.find(params[:id])
  @assignments = Questionable::Assignment.with_subject(@product)

===  In your view 

With HAML

  = render partial: 'questionable/assignments/form', locals: { assignments: @assignments }

Or ERB

  <%= render partial: 'questionable/assignments/form', locals: { assignments: @assignments } %>


===  Override Questionable models

survey/assignment.rb

  class Survey::Assignment < Questionable::Assignment
    self.abstract_class = true
    self.table_name_prefix = 'questionable_'

    def dummy
    end
  end

survey/question_group.rb

  class Survey::QuestionGroup < Questionable::QuestionGroup
    self.abstract_class = true
    self.table_name_prefix = 'questionable_'

    def dummy
    end
  end

survey/question.rb

  class Survey::Question < Questionable::Question
    self.abstract_class = true
    self.table_name_prefix = 'questionable_'

    def dummy
    end
  end

post.rb

  class Post < ActiveRecord::Base
    has_many :survey_assignments, :as => :subject, :class_name => 'Survey::Assignment'
    has_many :question_groups, :through => :survey_assignments, :class_name => 'Survey::QuestionGroup', :uniq => true, :include => :questions
  end

controllers/some_controller.rb

  @post = Post.find(param[:id])
  @question_groups = @post.questions_groups
  @questions = @question_groups.map{ |question_group| question_group.questions }
  @only_questions = @question_groups.map{ |question_group| question_group.only_questions } # only questions
  @only_comments = @question_groups.map{ |question_group| question_group.only_comments } # only group comments
  @answers = @only_questions.map{ |question| questions.answers }

=== Running Tests

  rake spec

== Author

Written by {Nick Urban}[https://github.com/nickurban/] at {Bespoke Post}[https://www.bespokepost.com/].

== Licence

This project uses the MIT-LICENSE.

